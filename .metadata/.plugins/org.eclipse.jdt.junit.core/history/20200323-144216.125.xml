<?xml version="1.0" encoding="UTF-8"?><testrun name="WalletItemsRepositoryTest" project="wallet" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testsuite name="com.wallet.repository.WalletItemsRepositoryTest" time="0.235">
    <testcase name="testSave" classname="com.wallet.repository.WalletItemsRepositoryTest" time="0.235">
      <error>org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement; SQL [/* load com.wallet.entity.WalletItem */ select walletitem0_.id as id1_3_0_, walletitem0_.date as date2_3_0_, walletitem0_.description as descript3_3_0_, walletitem0_.type as type4_3_0_, walletitem0_.value as value5_3_0_, walletitem0_.wallet as wallet6_3_0_ from wallet-items walletitem0_ where walletitem0_.id=?]; nested exception is org.hibernate.exception.SQLGrammarException: could not prepare statement&#13;
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:281)&#13;
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:255)&#13;
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)&#13;
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)&#13;
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)&#13;
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)&#13;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)&#13;
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:178)&#13;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)&#13;
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)&#13;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)&#13;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)&#13;
	at com.sun.proxy.$Proxy127.save(Unknown Source)&#13;
	at com.wallet.repository.WalletItemsRepositoryTest.testSave(WalletItemsRepositoryTest.java:44)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&#13;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:542)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:770)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:464)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
Caused by: org.hibernate.exception.SQLGrammarException: could not prepare statement&#13;
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:63)&#13;
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)&#13;
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)&#13;
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:186)&#13;
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)&#13;
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2104)&#13;
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2034)&#13;
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)&#13;
	at org.hibernate.loader.Loader.doQuery(Loader.java:953)&#13;
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:354)&#13;
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:324)&#13;
	at org.hibernate.loader.Loader.loadEntity(Loader.java:2410)&#13;
	at org.hibernate.loader.entity.AbstractEntityLoader.load(AbstractEntityLoader.java:74)&#13;
	at org.hibernate.loader.entity.AbstractEntityLoader.load(AbstractEntityLoader.java:63)&#13;
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4396)&#13;
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4386)&#13;
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:569)&#13;
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:537)&#13;
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)&#13;
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)&#13;
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)&#13;
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)&#13;
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:113)&#13;
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1176)&#13;
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1165)&#13;
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:194)&#13;
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2776)&#13;
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2757)&#13;
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2713)&#13;
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2757)&#13;
	at org.hibernate.internal.SessionImpl.get(SessionImpl.java:978)&#13;
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:306)&#13;
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:172)&#13;
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:70)&#13;
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)&#13;
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:783)&#13;
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:770)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:314)&#13;
	at com.sun.proxy.$Proxy106.merge(Unknown Source)&#13;
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:371)&#13;
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:204)&#13;
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:657)&#13;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)&#13;
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:621)&#13;
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605)&#13;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)&#13;
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)&#13;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)&#13;
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)&#13;
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)&#13;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)&#13;
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)&#13;
	... 39 more&#13;
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "                                        SELECT WALLETITEM0_.ID AS ID1_3_0_, WALLETITEM0_.DATE AS DATE2_3_0_, WALLETITEM0_.DESCRIPTION AS DESCRIPT3_3_0_, WALLETITEM0_.TYPE AS TYPE4_3_0_, WALLETITEM0_.VALUE AS VALUE5_3_0_, WALLETITEM0_.WALLET AS WALLET6_3_0_ FROM WALLET-[*]ITEMS WALLETITEM0_ WHERE WALLETITEM0_.ID=?"; SQL statement:
/* load com.wallet.entity.WalletItem */ select walletitem0_.id as id1_3_0_, walletitem0_.date as date2_3_0_, walletitem0_.description as descript3_3_0_, walletitem0_.type as type4_3_0_, walletitem0_.value as value5_3_0_, walletitem0_.wallet as wallet6_3_0_ from wallet-items walletitem0_ where walletitem0_.id=? [42000-200]&#13;
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)&#13;
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)&#13;
	at org.h2.message.DbException.get(DbException.java:205)&#13;
	at org.h2.message.DbException.get(DbException.java:181)&#13;
	at org.h2.message.DbException.getSyntaxError(DbException.java:229)&#13;
	at org.h2.command.Parser.getSyntaxError(Parser.java:1051)&#13;
	at org.h2.command.Parser.prepareCommand(Parser.java:741)&#13;
	at org.h2.engine.Session.prepareLocal(Session.java:657)&#13;
	at org.h2.engine.Session.prepareCommand(Session.java:595)&#13;
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)&#13;
	at org.h2.jdbc.JdbcPreparedStatement.&lt;init&gt;(JdbcPreparedStatement.java:76)&#13;
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:352)&#13;
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:316)&#13;
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)&#13;
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)&#13;
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)&#13;
	... 96 more&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
